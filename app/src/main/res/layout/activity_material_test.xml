<android.support.v4.widget.DrawerLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:id="@+id/drawerLayout"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context="com.example.andras.myapplication.MaterialTestActivity">

    <RelativeLayout android:layout_width="match_parent"
        android:layout_height="match_parent" android:paddingLeft="@dimen/activity_horizontal_margin"
        android:paddingRight="@dimen/activity_horizontal_margin"
        android:paddingTop="@dimen/activity_vertical_margin"
        android:paddingBottom="@dimen/activity_vertical_margin"
        tools:context="com.example.andras.myapplication.MaterialTestActivity">

        <TextView android:text="@string/hello_world" android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:elevation="2dp"
            android:background="@drawable/mat_textview_backg"/>

        <android.support.design.widget.FloatingActionButton
            android:id="@+id/floatingActionButton"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_gravity="right|bottom"
            android:layout_margin="30dp"
            android:src="@android:drawable/ic_input_add" />

    </RelativeLayout>

    <!-- layout for drawer
    From documentation

    To use a DrawerLayout, position your primary content view as the first child with a width and height of match_parent.
    Add drawers as child views after the main content view and set the layout_gravity appropriately.
    Drawers commonly use match_parent for height with a fixed width.
    -->
    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:layout_gravity="start"
        android:background="#ffffff"
        android:orientation="vertical">

    </LinearLayout>

</android.support.v4.widget.DrawerLayout>
